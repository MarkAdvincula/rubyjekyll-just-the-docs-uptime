{
  "source": 2,
  "revision": 50,
  "description": null,
  "createdBy": {
    "displayName": "Pham, Vinh Tuan",
    "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
    "_links": {
      "avatar": {
        "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      }
    },
    "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
    "uniqueName": "vinh.pham@dxc.com",
    "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
    "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
  },
  "createdOn": "2022-01-26T08:16:39.403Z",
  "modifiedBy": {
    "displayName": "Pham, Vinh Tuan",
    "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
    "_links": {
      "avatar": {
        "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      }
    },
    "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
    "uniqueName": "vinh.pham@dxc.com",
    "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
    "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
  },
  "modifiedOn": "2022-02-25T08:38:10.907Z",
  "isDeleted": false,
  "lastRelease": {
    "id": 177,
    "name": "Release-22",
    "artifacts": [],
    "_links": {},
    "description": "",
    "releaseDefinition": {
      "id": 13,
      "projectReference": null,
      "_links": {}
    },
    "createdOn": "2022-02-25T08:38:19.790Z",
    "createdBy": {
      "displayName": "Pham, Vinh Tuan",
      "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
      "_links": {
        "avatar": {
          "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
        }
      },
      "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
      "uniqueName": "vinh.pham@dxc.com",
      "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
      "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
    }
  },
  "variables": {
    "acr": {
      "value": "cruptime$(env)$(uid)"
    },
    "az_subscription": {
      "value": "{az_subscription}"
    },
    "DOCKER_REGISTRY_SERVER_PASSWORD": {
      "value": "NtIo8nuHpme95XjGfMu4qGcVuyD1vR8="
    },
    "DOCKER_REGISTRY_SERVER_URL": {
      "value": "cruptime{env}{uid}.azurecr.io"
    },
    "DOCKER_REGISTRY_SERVER_USERNAME": {
      "value": "cruptime{env}{uid}"
    },
    "env": {
      "value": "{env}"
    },
    "keyvault": {
      "value": "kv-uptime-$(env)-$(uid)"
    },
    "location": {
      "value": "eastus"
    },
    "REACT_APP_APPINSIGHTS_KEY": {
      "value": "3c114cdc-37bb-402c-b7c4-93e7346cef46"
    },
    "REACT_APP_QUALTRICS_FEEDBACK_ID": {
      "value": "ZN_8BrBPSAqAo6L7cG"
    },
    "REACT_APP_QUALTRICS_KEY": {
      "value": "QSI_S_ZN_8BrBPSAqAo6L7cG"
    },
    "REACT_APP_QUALTRICS_LINK": {
      "value": "https://zn8brbpsaqao6l7cg-dxcmw.siteintercept.qualtrics.com/SIE/?Q_ZID=ZN_8BrBPSAqAo6L7cG"
    },
    "SNOW_PW": {
      "value": "Longandcomplex26!"
    },
    "SNOW_URL": {
      "value": "https://dxcsandboxwms.service-now.com/"
    },
    "SNOW_USER": {
      "value": "Uptime.portal "
    },
    "uid": {
      "value": "{uid}"
    }
  },
  "variableGroups": [
    2
  ],
  "environments": [
    {
      "id": 58,
      "name": "frontend",
      "rank": 1,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "REACT_APP_BOOMI_URL": {
          "value": "https://apim-uptime-$(uid).azure-api.net/boomi/api"
        },
        "REACT_APP_CONNECT_CHAT_WIDGET_SECRET_KEY": {
          "value": "zPPBeT5uKAo.s2s6SQF2mwpicZqsmYaXwxcn2w64SmBOWi7vDldTYP0"
        },
        "REACT_APP_OCP_APIM_SUBSCRIPTION_KEY": {
          "value": "d84e45e174074afdbe287eb7da9c4961"
        },
        "REACT_APP_OCP_APIM_URL": {
          "value": "https://apim-uptime-$(uid).azure-api.net/ms-uptime-base/api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 172
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 191
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 192
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "1f81a8be-d8ce-497d-9791-190126f661e7",
              "version": "6.*",
              "name": "File Creator",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "filepath": "$(System.DefaultWorkingDirectory)/{directory}.Uptime-storybook/uptime-storybook/.npmrc",
                "filecontent": "; begin auth token\n//pkgs.dev.azure.com/mwa-microservices/30471f14-7b17-4f5b-b996-8a71d5aba884/_packaging/mytech/npm/registry/:username=mwa-microservices\n//pkgs.dev.azure.com/mwa-microservices/30471f14-7b17-4f5b-b996-8a71d5aba884/_packaging/mytech/npm/registry/:_password=\"ZnQya3p0ZWNkc3pwcWE1MzI1N2ptM3Zrdmxjcm9lcXpiZGUyd2Nhb3hhdGZubWZkZ2FicQ==\"\n//pkgs.dev.azure.com/mwa-microservices/30471f14-7b17-4f5b-b996-8a71d5aba884/_packaging/mytech/npm/registry/:email=vinh.pham@dxc.com\nregistry=https://pkgs.dev.azure.com/mwa-microservices/30471f14-7b17-4f5b-b996-8a71d5aba884/_packaging/mytech/npm/registry/ \nalways-auth=true\n; end auth token",
                "fileoverwrite": "true",
                "skipempty": "false",
                "endWithNewLine": "false",
                "verbose": "false"
              }
            },
            {
              "environment": {},
              "taskId": "1f81a8be-d8ce-497d-9791-190126f661e7",
              "version": "6.*",
              "name": "File Creator",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "filepath": "$(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web/.npmrc",
                "filecontent": "; begin auth token\n//pkgs.dev.azure.com/mwa-microservices/30471f14-7b17-4f5b-b996-8a71d5aba884/_packaging/mytech/npm/registry/:username=mwa-microservices\n//pkgs.dev.azure.com/mwa-microservices/30471f14-7b17-4f5b-b996-8a71d5aba884/_packaging/mytech/npm/registry/:_password=\"ZnQya3p0ZWNkc3pwcWE1MzI1N2ptM3Zrdmxjcm9lcXpiZGUyd2Nhb3hhdGZubWZkZ2FicQ==\"\n//pkgs.dev.azure.com/mwa-microservices/30471f14-7b17-4f5b-b996-8a71d5aba884/_packaging/mytech/npm/registry/:email=vinh.pham@dxc.com\nregistry=https://pkgs.dev.azure.com/mwa-microservices/30471f14-7b17-4f5b-b996-8a71d5aba884/_packaging/mytech/npm/registry/ \nalways-auth=true\n; end auth token",
                "fileoverwrite": "true",
                "skipempty": "false",
                "endWithNewLine": "false",
                "verbose": "false"
              }
            },
            {
              "environment": {},
              "taskId": "31c75bbb-bcdf-4706-8d7c-4da6a1959bc2",
              "version": "0.*",
              "name": "Use Node 14.x",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "versionSpec": "14.x",
                "checkLatest": "false",
                "force32bit": "false"
              }
            },
            {
              "environment": {},
              "taskId": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
              "version": "2.*",
              "name": "Copy Files to: $(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web/uptimestorybook",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "SourceFolder": "$(System.DefaultWorkingDirectory)/{directory}.Uptime-storybook/uptime-storybook",
                "Contents": "**",
                "TargetFolder": "$(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web/uptimestorybook",
                "CleanTargetFolder": "false",
                "OverWrite": "false",
                "flattenFolders": "false",
                "preserveTimestamp": "false",
                "retryCount": "0",
                "delayBetweenRetries": "1000",
                "ignoreMakeDirErrors": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "npm install\nnpm run build",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web/uptimestorybook",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "1f81a8be-d8ce-497d-9791-190126f661e7",
              "version": "6.*",
              "name": "File Creator",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "filepath": "$(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web/.env",
                "filecontent": "SKIP_PREFLIGHT_CHECK=true\nREACT_APP_API_SUBSCRIPTION_KEY=asdsads\nREACT_APP_AUTH_ENDPOINT=$(graphiti_endpoint)\nREACT_APP_CLIENT_ID=asdsad\nREACT_APP_API_SCOPE=asdasdsad\nREACT_APP_API_GRAPH_ENDPOINT=$(graphiti_endpoint)\nLOCAL_GRAPHITI_ENDPOINT=$(graphiti_endpoint)\nREACT_APP_ENV=local\nREACT_APP_BUILD_NUMBER=$(Build.BuildId)\nREACT_APP_AUTH_BASE_URL=value\nREACT_APP_AUTH_DEFAULT_SCOPE=value\nREACT_APP_ISSUER=value\nREACT_APP_CLIENT_SECRET=value\nREACT_APP_GRANT_TYPE=value\nREACT_APP_TOKEN_ENDPOINT=value\nREACT_APP_BOLD_ACCOUNT_ID=value\nREACT_APP_BOLD_CHAT_BUTTON_ID=value\nREACT_APP_BOLD_INVITATION_ID_STAGE=value\nREACT_APP_BOLD_WEBSITE_ID_STAGE=value\nREACT_APP_LOUNGE_URL=value\nREACT_APP_SERVICE_NOW_CHAT_URL=https://teams.microsoft.com/l/chat/0/0?users=DXC_ConnectChat_Demo@enchat.svcs.entsvcs.com\nI18N_TRANSLATOR_ENDPOINT=value\nI18N_APIM_SUBSCRIPTION_KEY=value\nI18N_AUTH_URL=value\nI18N_APIM_CLIENT_ID=value\nI18N_APIM_CLIENT_SECRET=value\nI18N_APIM_GRANT_TYPE=value\nI18N_APIM_SCOPE=value\nREACT_APP_SHOW_WORK_IN_PROGRESS=local\nREACT_APP_GTM_ID=asdsadsa\n\n\nREACT_APP_OKTA_BASE_URL=https://uid.dxc.com\nREACT_APP_OKTA_CLIENTID=0oa2nlzlfuYFMDFcW5d7\nREACT_APP_OKTA_LOGO=https://ok12static.oktacdn.com/fs/bco/1/fs0woruuvIgAGwAdl5d6\n\nREACT_APP_AWS_START_CHAT_URL=https://vousweedf4.execute-api.eu-west-2.amazonaws.com/Prod\nREACT_APP_AWS_PARTICIPANT_URL=https://participant.connect.eu-west-2.amazonaws.com/participant/\nREACT_APP_AWS_CONTACT_FLOW_ID=158ab717-cbff-4fba-8dc3-f0333345ddde\nREACT_APP_AWS_INSTANCE_ID=28d84633-3a26-4fbc-810b-cd04597f4267\n\n\nREACT_APP_SHOW_WELCOME_MODAL_TIMESTAMP=value\nREACT_APP_FILE_UPLOADER_URL=value\n \nREACT_APP_NEW_RELIC_ACCOUNT_ID=value\nREACT_APP_NEW_RELIC_AGENT_ID=value\nREACT_APP_NEW_RELIC_TRUST_KEY=value\nREACT_APP_NEW_RELIC_LICENSE_KEY=value\nREACT_APP_NEW_RELIC_APP_ID=value\nREACT_APP_OCP_APIM_URL=$(REACT_APP_OCP_APIM_URL)\nREACT_APP_OCP_APIM_SUBSCRIPTION_KEY=$(REACT_APP_OCP_APIM_SUBSCRIPTION_KEY)\nREACT_APP_BOOMI_URL=$(REACT_APP_BOOMI_URL)\n#The environment property only accept two values is “dev” and “test”\nREACT_APP_CONNECT_CHAT_WIDGET_ENVIRONMENT=test\nREACT_APP_BUILD_NUMBER=$(Build.BuildId)\nREACT_APP_CONNECT_CHAT_WIDGET_SECRET_KEY=$(REACT_APP_CONNECT_CHAT_WIDGET_SECRET_KEY)\nREACT_APP_APPINSIGHTS_KEY=$(REACT_APP_APPINSIGHTS_KEY)\nREACT_APP_QUALTRICS_FEEDBACK_ID=$(REACT_APP_QUALTRICS_FEEDBACK_ID)\nREACT_APP_QUALTRICS_KEY=$(REACT_APP_QUALTRICS_KEY)\nREACT_APP_QUALTRICS_LINK=$(REACT_APP_QUALTRICS_LINK)\nREACT_APP_TACHYON_INTEGRATION=true",
                "fileoverwrite": "true",
                "skipempty": "false",
                "endWithNewLine": "false",
                "verbose": "false"
              }
            },
            {
              "environment": {},
              "taskId": "1f81a8be-d8ce-497d-9791-190126f661e7",
              "version": "6.*",
              "name": "File Creator",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "filepath": "$(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web/Dockerfile",
                "filecontent": "FROM node:14.17.1 as build-stage\n\n# Create app directory\nWORKDIR /app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY . .\n\nRUN npm install --only=production && rm -f .npmrc\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\nENV NODE_OPTIONS=--max_old_space_size=4096\nRUN npm link ./uptimestorybook\n\nRUN npm run build\n\nFROM node:15.7.0-alpine\nRUN yarn global add serve\nWORKDIR /app\nCOPY --from=build-stage /app/node_modules ./node_modules\nCOPY --from=build-stage /app/build .\n\nCMD [\"serve\", \"-p\", \"80\", \"-s\", \".\"]",
                "fileoverwrite": "true",
                "skipempty": "false",
                "endWithNewLine": "false",
                "verbose": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t uptime/portal-web:$(Build.BuildId) -r \"$(acr)\" .",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "uptime/portal-web",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.portal-web/portal-web",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "15858991-8bac-4542-99e7-577fef9b5be6",
              "version": "1.*",
              "name": "Azure Web App on Container Deploy: app-portal-web-$(env)-$(location)-$(uid)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "app-portal-web-$(env)-$(location)-$(uid)",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/uptime/portal-web:$(Build.BuildId)",
                "multicontainerConfigFile": "",
                "containerCommand": "",
                "appSettings": "-DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD)",
                "configurationStrings": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 170,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/170",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/58"
    },
    {
      "id": 59,
      "name": "backend",
      "rank": 2,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {},
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 173
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 190
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 193
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": []
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 170,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/170",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/59"
    },
    {
      "id": 60,
      "name": "ms-asset",
      "rank": 3,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "databaseId": {
          "value": "asset"
        },
        "func": {
          "value": "func-$(ms-name)-api-$(env)-$(location)-$(uid)"
        },
        "image": {
          "value": "uptime/$(ms-name)"
        },
        "ms-name": {
          "value": "ms-asset"
        },
        "ms-path": {
          "value": "$(ms-name)-api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 174
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 189
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 194
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 38,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "1e244d32-2dd4-4165-96fb-b7441ca9331e",
              "version": "2.*",
              "name": "Azure Key Vault: $(keyvault)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "KeyVaultName": "$(keyvault)",
                "SecretsFilter": "*",
                "RunAsPreJob": "false"
              }
            },
            {
              "environment": {},
              "taskId": "31c75bbb-bcdf-4706-8d7c-4da6a1959bc2",
              "version": "0.*",
              "name": "Use Node 14.x",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "versionSpec": "14.x",
                "checkLatest": "false",
                "force32bit": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path provision.config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-asset-api-{env}-{uid}-endpoint)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-asset-api-{env}-{uid}-key)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path provision.config.js\n\n(Get-Content -path config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-asset-api-{env}-{uid}-endpoint)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-asset-api-{env}-{uid}-key)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path config.js",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-asset-api/ms-asset-api/azure/database/latest_release/R2_21.11.1",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fe47e961-9fa8-4106-8639-368c022d43ad",
              "version": "1.*",
              "name": "npm install",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "command": "install",
                "workingDir": "$(System.DefaultWorkingDirectory)/{directory}.ms-asset-api/ms-asset-api/azure/database/latest_release/R2_21.11.1",
                "verbose": "false",
                "customCommand": "",
                "customRegistry": "useNpmrc",
                "customFeed": "",
                "customEndpoint": "",
                "publishRegistry": "useExternalRegistry",
                "publishFeed": "",
                "publishPackageMetadata": "true",
                "publishEndpoint": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "npm run provision",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-asset-api/ms-asset-api/azure/database/latest_release/R2_21.11.1",
                "failOnStderr": "false"
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t $(image):$(Build.BuildId) -r \"$(acr)\" .",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "$(image)",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "13c22ce0-3b93-43f9-aeb7-71fbce7bf5b2",
              "version": "1.*",
              "name": "Azure Function App on Container Deploy: $(func)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "$(func)",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/$(image):$(Build.BuildId)",
                "containerCommand": "",
                "appSettings": "-SNOW_URL $(SNOW_URL) -SNOW_USER $(SNOW_USER) -SNOW_PW $(SNOW_PW) -CUSTOM_INTEGRATION true -ELIGIBLE_REFRESH_STOCKROOM Test -DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD)",
                "configurationStrings": ""
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 3,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path swagger.json -Raw) -replace 'ms_url','https://$(func).azurewebsites.net/api' | Set-Content -Path swagger.json",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Artifact",
                "swaggerlocation": "",
                "swaggerartifact": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim/swagger.json",
                "swaggercode": "",
                "targetapi": "$(ms-name)",
                "DisplayName": "$(ms-name)",
                "pathapi": "$(ms-name)/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n\t<inbound>\n             <cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t     </cors>\n            <set-header name=\"x-functions-key\" exists-action=\"override\">\n                 <value>$(functionKey)</value>\n            </set-header>\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 173,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/173",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/60"
    },
    {
      "id": 61,
      "name": "ms-incident",
      "rank": 4,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "databaseId": {
          "value": "incident"
        },
        "func": {
          "value": "func-$(ms-name)-api-$(env)-$(location)-$(uid)"
        },
        "image": {
          "value": "uptime/$(ms-name)"
        },
        "ms-name": {
          "value": "ms-incident"
        },
        "ms-path": {
          "value": "$(ms-name)-api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 175
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 188
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 195
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 38,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "1e244d32-2dd4-4165-96fb-b7441ca9331e",
              "version": "2.*",
              "name": "Azure Key Vault: $(keyvault)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "KeyVaultName": "$(keyvault)",
                "SecretsFilter": "*",
                "RunAsPreJob": "false"
              }
            },
            {
              "environment": {},
              "taskId": "31c75bbb-bcdf-4706-8d7c-4da6a1959bc2",
              "version": "0.*",
              "name": "Use Node 14.x",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "versionSpec": "14.x",
                "checkLatest": "false",
                "force32bit": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path provision.config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-incident-api-{env}-{uid}-endpoint)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-incident-api-{env}-{uid}-key)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path provision.config.js\n\n(Get-Content -path config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-incident-api-{env}-{uid}-endpoint)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-incident-api-{env}-{uid}-key)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path config.js",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-incident-api/ms-incident-api/azure/database/latest_release/R2_21.10.7",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fe47e961-9fa8-4106-8639-368c022d43ad",
              "version": "1.*",
              "name": "npm install",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "command": "install",
                "workingDir": "$(System.DefaultWorkingDirectory)/{directory}.ms-incident-api/ms-incident-api/azure/database/latest_release/R2_21.10.7",
                "verbose": "false",
                "customCommand": "",
                "customRegistry": "useNpmrc",
                "customFeed": "",
                "customEndpoint": "",
                "publishRegistry": "useExternalRegistry",
                "publishFeed": "",
                "publishPackageMetadata": "true",
                "publishEndpoint": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "npm run provision",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-incident-api/ms-incident-api/azure/database/latest_release/R2_21.10.7",
                "failOnStderr": "false"
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t $(image):$(Build.BuildId) -r \"$(acr)\" .\n",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "$(image)",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.ms-incident-api/ms-incident-api/azure/function/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.ms-incident-api/ms-incident-api/azure/function",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "13c22ce0-3b93-43f9-aeb7-71fbce7bf5b2",
              "version": "1.*",
              "name": "Azure Function App on Container Deploy: $(func)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "$(func)",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/$(image):$(Build.BuildId)",
                "containerCommand": "",
                "appSettings": "-SNOW_URL $(SNOW_URL) -SNOW_USER $(SNOW_USER) -SNOW_PW $(SNOW_PW) -INCIDENT_STATE {\"open\":\"1,2,10,3,4,5,8\",\"closed\":\"6,7\"} -CUSTOM_INTEGRATION true -DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD)",
                "configurationStrings": ""
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 3,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path swagger.json -Raw) -replace 'ms_url','https://$(func).azurewebsites.net/api' | Set-Content -Path swagger.json",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Artifact",
                "swaggerlocation": "",
                "swaggerartifact": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim/swagger.json",
                "swaggercode": "",
                "targetapi": "$(ms-name)",
                "DisplayName": "$(ms-name)",
                "pathapi": "$(ms-name)/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n\t<inbound>\n             <cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t     </cors>\n            <set-header name=\"x-functions-key\" exists-action=\"override\">\n                 <value>$(functionKey)</value>\n            </set-header>\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 176,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/176",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/61"
    },
    {
      "id": 62,
      "name": "ms-knowledge",
      "rank": 5,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "databaseId": {
          "value": "knowledge"
        },
        "func": {
          "value": "func-$(ms-name)-api-$(env)-$(location)-$(uid)"
        },
        "image": {
          "value": "uptime/$(ms-name)"
        },
        "ms-name": {
          "value": "ms-knowledge"
        },
        "ms-path": {
          "value": "$(ms-name)-api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 176
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 187
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 196
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 38,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "1e244d32-2dd4-4165-96fb-b7441ca9331e",
              "version": "2.*",
              "name": "Azure Key Vault: $(keyvault)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "KeyVaultName": "$(keyvault)",
                "SecretsFilter": "*",
                "RunAsPreJob": "false"
              }
            },
            {
              "environment": {},
              "taskId": "31c75bbb-bcdf-4706-8d7c-4da6a1959bc2",
              "version": "0.*",
              "name": "Use Node 14.x",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "versionSpec": "14.x",
                "checkLatest": "false",
                "force32bit": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path provision.config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-knowledge-api-{env}-{uid}-endpoint)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-knowledge-api-{env}-{uid}-key)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path provision.config.js\n\n(Get-Content -path config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-knowledge-api-{env}-{uid}-endpoint)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-knowledge-api-{env}-{uid}-key)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path config.js",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-knowledge-api/ms-knowledge-api/azure/database/latest_release/R2_21.11.2_HotFix2",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fe47e961-9fa8-4106-8639-368c022d43ad",
              "version": "1.*",
              "name": "npm install",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "command": "install",
                "workingDir": "$(System.DefaultWorkingDirectory)/{directory}.ms-knowledge-api/ms-knowledge-api/azure/database/latest_release/R2_21.11.2_HotFix2",
                "verbose": "false",
                "customCommand": "",
                "customRegistry": "useNpmrc",
                "customFeed": "",
                "customEndpoint": "",
                "publishRegistry": "useExternalRegistry",
                "publishFeed": "",
                "publishPackageMetadata": "true",
                "publishEndpoint": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "npm run provision",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-knowledge-api/ms-knowledge-api/azure/database/latest_release/R2_21.11.2_HotFix2",
                "failOnStderr": "false"
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t $(image):$(Build.BuildId) -r \"$(acr)\" .",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "$(image)",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "13c22ce0-3b93-43f9-aeb7-71fbce7bf5b2",
              "version": "1.*",
              "name": "Azure Function App on Container Deploy: $(func)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "$(func)",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/$(image):$(Build.BuildId)",
                "containerCommand": "",
                "appSettings": "-SNOW_URL $(SNOW_URL) -SNOW_USER $(SNOW_USER) -SNOW_PW $(SNOW_PW) -DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD)",
                "configurationStrings": ""
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 3,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"\n",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path swagger.json -Raw) -replace 'ms_url','https://$(func).azurewebsites.net/api' | Set-Content -Path swagger.json",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Artifact",
                "swaggerlocation": "",
                "swaggerartifact": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim/swagger.json",
                "swaggercode": "",
                "targetapi": "$(ms-name)",
                "DisplayName": "$(ms-name)",
                "pathapi": "$(ms-name)/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n\t<inbound>\n             <cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t     </cors>\n            <set-header name=\"x-functions-key\" exists-action=\"override\">\n                 <value>$(functionKey)</value>\n            </set-header>\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 176,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/176",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/62"
    },
    {
      "id": 63,
      "name": "ms-order",
      "rank": 6,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "databaseId": {
          "value": "order"
        },
        "func": {
          "value": "func-$(ms-name)-api-$(env)-$(location)-$(uid)"
        },
        "image": {
          "value": "uptime/$(ms-name)"
        },
        "ms-name": {
          "value": "ms-order"
        },
        "ms-path": {
          "value": "$(ms-name)-api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 177
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 186
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 197
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 38,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "1e244d32-2dd4-4165-96fb-b7441ca9331e",
              "version": "2.*",
              "name": "Azure Key Vault: $(keyvault)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "KeyVaultName": "$(keyvault)",
                "SecretsFilter": "*",
                "RunAsPreJob": "false"
              }
            },
            {
              "environment": {},
              "taskId": "31c75bbb-bcdf-4706-8d7c-4da6a1959bc2",
              "version": "0.*",
              "name": "Use Node 14.x",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "versionSpec": "14.x",
                "checkLatest": "false",
                "force32bit": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path provision.config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-order-api-{env}-{uid}-endpoint)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-order-api-{env}-{uid}-key)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path provision.config.js\n\n(Get-Content -path config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-order-api-{env}-{uid}-endpoint)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-order-api-{env}-{uid}-key)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path config.js",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-order-api/ms-order-api/azure/database/latest_release/22.2.2-UP",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fe47e961-9fa8-4106-8639-368c022d43ad",
              "version": "1.*",
              "name": "npm install",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "command": "install",
                "workingDir": "$(System.DefaultWorkingDirectory)/{directory}.ms-order-api/ms-order-api/azure/database/latest_release/22.2.2-UP",
                "verbose": "false",
                "customCommand": "",
                "customRegistry": "useNpmrc",
                "customFeed": "",
                "customEndpoint": "",
                "publishRegistry": "useExternalRegistry",
                "publishFeed": "",
                "publishPackageMetadata": "true",
                "publishEndpoint": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "npm run provision",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-order-api/ms-order-api/azure/database/latest_release/22.2.2-UP",
                "failOnStderr": "false"
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t $(image):$(Build.BuildId) -r \"$(acr)\" .",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "$(image)",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "13c22ce0-3b93-43f9-aeb7-71fbce7bf5b2",
              "version": "1.*",
              "name": "Azure Function App on Container Deploy: $(func)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "$(func)",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/$(image):$(Build.BuildId)",
                "containerCommand": "",
                "appSettings": "-SNOW_URL $(SNOW_URL) -SNOW_USER $(SNOW_USER) -SNOW_PW $(SNOW_PW) -REQUEST_ITEM_STATE {\"open\":\"-5,1,2\",\"closed\":\"5,3,4,7\"} -CUSTOM_INTEGRATION true -DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD)",
                "configurationStrings": ""
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 3,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"\n",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path swagger.json -Raw) -replace 'ms_url','https://$(func).azurewebsites.net/api' | Set-Content -Path swagger.json",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Artifact",
                "swaggerlocation": "",
                "swaggerartifact": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim/swagger.json",
                "swaggercode": "",
                "targetapi": "$(ms-name)",
                "DisplayName": "$(ms-name)",
                "pathapi": "$(ms-name)/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n\t<inbound>\n             <cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t     </cors>\n            <set-header name=\"x-functions-key\" exists-action=\"override\">\n                 <value>$(functionKey)</value>\n            </set-header>\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 176,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/176",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/63"
    },
    {
      "id": 64,
      "name": "ms-user",
      "rank": 7,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "databaseId": {
          "value": "user"
        },
        "func": {
          "value": "func-$(ms-name)-api-$(env)-$(location)-$(uid)"
        },
        "image": {
          "value": "uptime/$(ms-name)"
        },
        "ms-name": {
          "value": "ms-user"
        },
        "ms-path": {
          "value": "$(ms-name)-api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 178
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 185
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 198
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 38,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "1e244d32-2dd4-4165-96fb-b7441ca9331e",
              "version": "2.*",
              "name": "Azure Key Vault: $(keyvault)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "KeyVaultName": "$(keyvault)",
                "SecretsFilter": "*",
                "RunAsPreJob": "false"
              }
            },
            {
              "environment": {},
              "taskId": "31c75bbb-bcdf-4706-8d7c-4da6a1959bc2",
              "version": "0.*",
              "name": "Use Node 14.x",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "versionSpec": "14.x",
                "checkLatest": "false",
                "force32bit": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path provision.config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-user-api-{env}-{uid}-endpoint)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-user-api-{env}-{uid}-key)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path provision.config.js\n\n(Get-Content -path config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-user-api-{env}-{uid}-endpoint)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-user-api-{env}-{uid}-key)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path config.js",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-user-api/ms-user-api/azure/database/preprod",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fe47e961-9fa8-4106-8639-368c022d43ad",
              "version": "1.*",
              "name": "npm install",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "command": "install",
                "workingDir": "$(System.DefaultWorkingDirectory)/{directory}.ms-user-api/ms-user-api/azure/database/preprod",
                "verbose": "false",
                "customCommand": "",
                "customRegistry": "useNpmrc",
                "customFeed": "",
                "customEndpoint": "",
                "publishRegistry": "useExternalRegistry",
                "publishFeed": "",
                "publishPackageMetadata": "true",
                "publishEndpoint": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "npm run provision",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-user-api/ms-user-api/azure/database/preprod",
                "failOnStderr": "false"
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t $(image):$(Build.BuildId) -r \"$(acr)\" .",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "$(image)",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "13c22ce0-3b93-43f9-aeb7-71fbce7bf5b2",
              "version": "1.*",
              "name": "Azure Function App on Container Deploy: $(func)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "$(func)",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/$(image):$(Build.BuildId)",
                "containerCommand": "",
                "appSettings": "-SNOW_URL $(SNOW_URL) -SNOW_USER $(SNOW_USER) -SNOW_PW $(SNOW_PW) -REQUEST_ITEM_STATE {\"open\":\"-5,1,2\",\"closed\":\"5,3,4,7\"} -CUSTOM_INTEGRATION true -AZURE_TENANT_ID 93f33571-550f-43cf-b09f-cd331338d086 -AZURE_CLIENT_ID 8fec74e2-15d7-42d8-b23e-a11192c3d344 -AZURE_CLIENT_SECRET Ynu7Q~30p4bs94r8cecHt6UspH42HvLUeg.IM -DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD)",
                "configurationStrings": ""
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 3,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path swagger.json -Raw) -replace 'ms_url','https://$(func).azurewebsites.net/api' | Set-Content -Path swagger.json",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Artifact",
                "swaggerlocation": "",
                "swaggerartifact": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim/swagger.json",
                "swaggercode": "",
                "targetapi": "$(ms-name)",
                "DisplayName": "$(ms-name)",
                "pathapi": "$(ms-name)/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n\t<inbound>\n             <cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t     </cors>\n            <set-header name=\"x-functions-key\" exists-action=\"override\">\n                 <value>$(functionKey)</value>\n            </set-header>\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 176,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/176",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/64"
    },
    {
      "id": 65,
      "name": "ms-uptime-base",
      "rank": 8,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "databaseId": {
          "value": "uptime-base"
        },
        "func": {
          "value": "func-$(ms-name)-api-$(env)-$(location)-$(uid)"
        },
        "image": {
          "value": "uptime/$(ms-name)"
        },
        "ms-name": {
          "value": "ms-uptime-base"
        },
        "ms-path": {
          "value": "$(ms-name)-api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 179
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 184
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 199
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 38,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "1e244d32-2dd4-4165-96fb-b7441ca9331e",
              "version": "2.*",
              "name": "Azure Key Vault: $(keyvault)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "KeyVaultName": "$(keyvault)",
                "SecretsFilter": "*",
                "RunAsPreJob": "false"
              }
            },
            {
              "environment": {},
              "taskId": "31c75bbb-bcdf-4706-8d7c-4da6a1959bc2",
              "version": "0.*",
              "name": "Use Node 14.x",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "versionSpec": "14.x",
                "checkLatest": "false",
                "force32bit": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path provision.config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-uptime-base-api-{env}-{uid}-endpoint)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-uptime-base-api-{env}-{uid}-key)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path provision.config.js\n\n(Get-Content -path config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-uptime-base-api-{env}-{uid}-endpoint)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-uptime-base-api-{env}-{uid}-key)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path config.js",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-uptime-base-api/ms-uptime-base-api/azure/database/latest_release/22.2.2-UP",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fe47e961-9fa8-4106-8639-368c022d43ad",
              "version": "1.*",
              "name": "npm install",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "command": "install",
                "workingDir": "$(System.DefaultWorkingDirectory)/{directory}.ms-uptime-base-api/ms-uptime-base-api/azure/database/latest_release/22.2.2-UP",
                "verbose": "false",
                "customCommand": "",
                "customRegistry": "useNpmrc",
                "customFeed": "",
                "customEndpoint": "",
                "publishRegistry": "useExternalRegistry",
                "publishFeed": "",
                "publishPackageMetadata": "true",
                "publishEndpoint": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "npm run provision",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-uptime-base-api/ms-uptime-base-api/azure/database/latest_release/22.2.2-UP",
                "failOnStderr": "false"
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t $(image):$(Build.BuildId) -r \"$(acr)\" .",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "$(image)",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "13c22ce0-3b93-43f9-aeb7-71fbce7bf5b2",
              "version": "1.*",
              "name": "Azure Function App on Container Deploy: $(func)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "$(func)",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/$(image):$(Build.BuildId)",
                "containerCommand": "",
                "appSettings": "-DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD) -DEVICE_MANAGEMENT_SERVICE_API {\"url\":\"https://apim-uptime-$(uid).azure-api.net/ms-device-management\", \"header_key\": \"Ocp-Apim-Subscription-Key\", \"header_value\": \"d84e45e174074afdbe287eb7da9c4961\"}",
                "configurationStrings": ""
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 3,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"\n",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path swagger.json -Raw) -replace 'ms_url','https://$(func).azurewebsites.net/api' | Set-Content -Path swagger.json",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Artifact",
                "swaggerlocation": "",
                "swaggerartifact": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim/swagger.json",
                "swaggercode": "",
                "targetapi": "$(ms-name)",
                "DisplayName": "$(ms-name)",
                "pathapi": "$(ms-name)/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n    <inbound>\n        <cors>\n            <allowed-origins>\n                <origin>*</origin>\n            </allowed-origins>\n            <allowed-methods>\n                <method>*</method>\n            </allowed-methods>\n            <allowed-headers>\n                <header>*</header>\n            </allowed-headers>\n        </cors>\n        <set-header name=\"x-functions-key\" exists-action=\"override\">\n            <value>$(functionKey)</value>\n        </set-header>\n        <set-variable name=\"isCacheLookUp\" value=\"false\" />\n        <set-variable name=\"downstreamCachingType\" value=\"none\" />\n        <set-variable name=\"cacheDuration\" value=\"3600\" />\n        <choose>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;cmdb-user-info&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"user_name\" />\n                <set-variable name=\"queryParameter2\" value=\"user_email\" />\n                <set-variable name=\"queryParameter3\" value=\"employee_number\" />\n                <set-variable name=\"queryParameter4\" value=\"phone\" />\n                <set-variable name=\"queryParameter5\" value=\"user_uid\" />\n                <set-variable name=\"queryParameter6\" value=\"display_value\" />\n                <set-variable name=\"queryParameter7\" value=\"photo_size\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;cmdb-check-user-pilot-mode&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"user_name\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;incident-search&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"user_name\" />\n                <set-variable name=\"queryParameter2\" value=\"keyword\" />\n                <set-variable name=\"queryParameter3\" value=\"states\" />\n                <set-variable name=\"queryParameter4\" value=\"sort_order\" />\n                <set-variable name=\"queryParameter5\" value=\"date_range\" />\n                <set-variable name=\"queryParameter6\" value=\"page_index\" />\n                <set-variable name=\"queryParameter7\" value=\"page_size\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;incident-get-by-number&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"user_name\" />\n                <set-variable name=\"queryParameter2\" value=\"incident_number\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;order-search&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"user_name\" />\n                <set-variable name=\"queryParameter2\" value=\"keyword\" />\n                <set-variable name=\"queryParameter3\" value=\"states\" />\n                <set-variable name=\"queryParameter4\" value=\"categories\" />\n                <set-variable name=\"queryParameter5\" value=\"request_for\" />\n                <set-variable name=\"queryParameter6\" value=\"sort_order\" />\n                <set-variable name=\"queryParameter7\" value=\"date_range\" />\n                <set-variable name=\"queryParameter8\" value=\"page_index\" />\n                <set-variable name=\"queryParameter9\" value=\"page_size\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;order-get-by-number&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"user_name\" />\n                <set-variable name=\"queryParameter2\" value=\"order_number\" />\n            </when>\n                <when condition=\"@(context.Operation.Id.Equals(&#34;knowledge-search&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"user_name\" />\n                <set-variable name=\"queryParameter2\" value=\"keyword\" />\n                <set-variable name=\"queryParameter3\" value=\"knowledge_bases\" />\n                <set-variable name=\"queryParameter4\" value=\"categories\" />\n                <set-variable name=\"queryParameter5\" value=\"order_by\" />\n                <set-variable name=\"queryParameter6\" value=\"language\" />\n                <set-variable name=\"queryParameter7\" value=\"page_index\" />\n                <set-variable name=\"queryParameter8\" value=\"page_size\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;knowledge-retrieve&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"number\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;knowledge-announcements&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"language\" />\n                <set-variable name=\"queryParameter2\" value=\"text_limit\" />\n                <set-variable name=\"queryParameter3\" value=\"page_index\" />\n                <set-variable name=\"queryParameter4\" value=\"page_size\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;knowledge-featured&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"language\" />\n                <set-variable name=\"queryParameter2\" value=\"text_limit\" />\n                <set-variable name=\"queryParameter3\" value=\"page_index\" />\n                <set-variable name=\"queryParameter4\" value=\"page_size\" />\n            </when>\n            <when condition=\"@(context.Operation.Id.Equals(&#34;knowledge-news&#34;))\">\n                <set-variable name=\"isCacheLookUp\" value=\"true\" />\n                <set-variable name=\"cacheDuration\" value=\"120\" />\n                <set-variable name=\"queryParameter1\" value=\"language\" />\n                <set-variable name=\"queryParameter2\" value=\"text_limit\" />\n                <set-variable name=\"queryParameter3\" value=\"page_index\" />\n                <set-variable name=\"queryParameter4\" value=\"page_size\" />\n            </when>\n        </choose>\n        <choose>\n            <when condition=\"@(context.Variables.GetValueOrDefault&lt;string&gt;(&#34;isCacheLookUp&#34;).Equals(&#34;true&#34;))\">\n                <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" must-revalidate=\"true\" downstream-caching-type=\"@(context.Variables.GetValueOrDefault&lt;string&gt;(&#34;downstreamCachingType&#34;))\">\n                    <vary-by-header>Accept</vary-by-header>\n                    <vary-by-header>Accept-Charset</vary-by-header>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter1\",\"default\"))</vary-by-query-parameter>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter2\",\"default\"))</vary-by-query-parameter>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter3\",\"default\"))</vary-by-query-parameter>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter4\",\"default\"))</vary-by-query-parameter>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter5\",\"default\"))</vary-by-query-parameter>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter6\",\"default\"))</vary-by-query-parameter>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter7\",\"default\"))</vary-by-query-parameter>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter8\",\"default\"))</vary-by-query-parameter>\n                    <vary-by-query-parameter>@(context.Variables.GetValueOrDefault&lt;string&gt;(\"queryParameter9\",\"default\"))</vary-by-query-parameter>\n                </cache-lookup>\n            </when>\n        </choose>\n    </inbound>\n    <backend>\n        <retry condition=\"@(context.Response.StatusCode == 408 || context.Response.StatusCode == 500 || context.Response.StatusCode == 504)\" count=\"3\" interval=\"1\" first-fast-retry=\"true\">\n            <forward-request buffer-request-body=\"true\" />\n        </retry>\n    </backend>\n    <outbound>\n        <base />\n        <choose>\n            <when condition=\"@(context.Variables.GetValueOrDefault&lt;string&gt;(&#34;isCacheLookUp&#34;).Equals(&#34;true&#34;))\">\n                <cache-store duration=\"@{\n                    var duration = context.Variables.GetValueOrDefault&lt;string&gt;(&#34;cacheDuration&#34;);\n                    return Int32.Parse(duration);\n                    }\" />\n            </when>\n        </choose>\n    </outbound>\n    <on-error>\n        <base />\n    </on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 177,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/177",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/65"
    },
    {
      "id": 66,
      "name": "ms-shipping",
      "rank": 9,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "databaseId": {
          "value": "shipping"
        },
        "func": {
          "value": "func-$(ms-name)-api-$(env)-$(location)-$(uid)"
        },
        "image": {
          "value": "uptime/$(ms-name)"
        },
        "ms-name": {
          "value": "ms-shipping"
        },
        "ms-path": {
          "value": "$(ms-name)-api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 180
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 183
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 200
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 38,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "1e244d32-2dd4-4165-96fb-b7441ca9331e",
              "version": "2.*",
              "name": "Azure Key Vault: $(keyvault)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "KeyVaultName": "$(keyvault)",
                "SecretsFilter": "*",
                "RunAsPreJob": "false"
              }
            },
            {
              "environment": {},
              "taskId": "31c75bbb-bcdf-4706-8d7c-4da6a1959bc2",
              "version": "0.*",
              "name": "Use Node 14.x",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "versionSpec": "14.x",
                "checkLatest": "false",
                "force32bit": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path provision.config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-shipping-api-{env}-{uid}-endpoint)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-shipping-api-{env}-{uid}-key)' | Set-Content -Path provision.config.js\n(Get-Content -path provision.config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path provision.config.js\n\n(Get-Content -path config.js -Raw) -replace 'cosmos_endpoint','$(cosmos-ms-shipping-api-{env}-{uid}-endpoint)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_key','$(cosmos-ms-shipping-api-{env}-{uid}-key)' | Set-Content -Path config.js\n(Get-Content -path config.js -Raw) -replace 'cosmos_databaseId','$(databaseId)' | Set-Content -Path config.js",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-shipping-api/ms-shipping-api/azure/database/latest_release/22.2.2-UP",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fe47e961-9fa8-4106-8639-368c022d43ad",
              "version": "1.*",
              "name": "npm install",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "command": "install",
                "workingDir": "$(System.DefaultWorkingDirectory)/{directory}.ms-shipping-api/ms-shipping-api/azure/database/latest_release/22.2.2-UP",
                "verbose": "false",
                "customCommand": "",
                "customRegistry": "useNpmrc",
                "customFeed": "",
                "customEndpoint": "",
                "publishRegistry": "useExternalRegistry",
                "publishFeed": "",
                "publishPackageMetadata": "true",
                "publishEndpoint": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "npm run provision",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.ms-shipping-api/ms-shipping-api/azure/database/latest_release/22.2.2-UP",
                "failOnStderr": "false"
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t $(image):$(Build.BuildId) -r \"$(acr)\" .",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "$(image)",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "13c22ce0-3b93-43f9-aeb7-71fbce7bf5b2",
              "version": "1.*",
              "name": "Azure Function App on Container Deploy: $(func)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "$(func)",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/$(image):$(Build.BuildId)",
                "containerCommand": "",
                "appSettings": "-DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD)",
                "configurationStrings": ""
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 3,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"\n",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path swagger.json -Raw) -replace 'ms_url','https://$(func).azurewebsites.net/api' | Set-Content -Path swagger.json",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Artifact",
                "swaggerlocation": "",
                "swaggerartifact": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim/swagger.json",
                "swaggercode": "",
                "targetapi": "$(ms-name)",
                "DisplayName": "$(ms-name)",
                "pathapi": "$(ms-name)/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n\t<inbound>\n             <cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t     </cors>\n            <set-header name=\"x-functions-key\" exists-action=\"override\">\n                 <value>$(functionKey)</value>\n            </set-header>\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 177,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/177",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/66"
    },
    {
      "id": 67,
      "name": "ms-boomi",
      "rank": 10,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "boomi_password": {
          "value": null,
          "isSecret": true
        },
        "boomi_url": {
          "value": "https://c01-usa-east.integrate-test.boomi.com/ws/rest/pclifecycle/request"
        },
        "boomi_username": {
          "value": null,
          "isSecret": true
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 181
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 182
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 201
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2022"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Code",
                "swaggerlocation": "",
                "swaggerartifact": "",
                "swaggercode": "{\n    \"openapi\": \"3.0.1\",\n    \"info\": {\n        \"title\": \"boomi\",\n        \"description\": \"\",\n        \"version\": \"1.0\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"$(boomi_url)\"\n        }\n    ],\n    \"paths\": {\n        \"/ws/rest/pclifecycle/request/\": {\n            \"post\": {\n                \"summary\": \"pclifecycle-request\",\n                \"operationId\": \"pclifecycle-request\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": null\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"securitySchemes\": {\n            \"apiKeyHeader\": {\n                \"type\": \"apiKey\",\n                \"name\": \"Ocp-Apim-Subscription-Key\",\n                \"in\": \"header\"\n            },\n            \"apiKeyQuery\": {\n                \"type\": \"apiKey\",\n                \"name\": \"subscription-key\",\n                \"in\": \"query\"\n            }\n        }\n    },\n    \"security\": [\n        {\n            \"apiKeyHeader\": []\n        },\n        {\n            \"apiKeyQuery\": []\n        }\n    ]\n}",
                "targetapi": "boomi",
                "DisplayName": "boomi",
                "pathapi": "boomi/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n    <inbound>\n        <authentication-basic username=\"$(boomi_username)\" password=\"$(boomi_password)\" />\n        <cors>\n            <allowed-origins>\n                <origin>*</origin>\n            </allowed-origins>\n            <allowed-methods>\n                <method>*</method>\n            </allowed-methods>\n            <allowed-headers>\n                <header>*</header>\n            </allowed-headers>\n        </cors>\n    </inbound>\n    <backend>\n        <base />\n    </backend>\n    <outbound>\n        <base />\n    </outbound>\n    <on-error>\n        <base />\n    </on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 170,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/170",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/67"
    },
    {
      "id": 70,
      "name": "ms-device-management",
      "rank": 11,
      "owner": {
        "displayName": "Pham, Vinh Tuan",
        "url": "https://spsprodweu4.vssps.visualstudio.com/Af497fd21-67e1-4dc6-8432-d3bda48fe89f/_apis/Identities/7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
          }
        },
        "id": "7cc77386-ffb6-69c4-892f-3458df54a9e8",
        "uniqueName": "vinh.pham@dxc.com",
        "imageUrl": "https://dev.azure.com/WMShowCase/_apis/GraphProfile/MemberAvatars/aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4",
        "descriptor": "aad.N2NjNzczODYtZmZiNi03OWM0LTg5MmYtMzQ1OGRmNTRhOWU4"
      },
      "variables": {
        "databaseId": {
          "value": "device-management"
        },
        "func": {
          "value": "func-$(ms-name)-api-$(env)-$(location)-$(uid)"
        },
        "image": {
          "value": "uptime/$(ms-name)"
        },
        "ms-name": {
          "value": "ms-device-management"
        },
        "ms-path": {
          "value": "$(ms-name)-api"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 208
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 209
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 210
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "ubuntu-20.04"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-device-management-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\naz acr login -n \"$(acr)\"\n\naz acr build -t $(image):$(Build.BuildId) -r \"$(acr)\" .",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/function",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "8413c881-4959-43d5-8840-b4ea0ffc5cfe",
              "version": "0.*",
              "name": "Container Build Task",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "dockerRegistryServiceConnection": "fe9efe8c-9fc5-4d06-85b6-221ca5437bb8",
                "repository": "$(image)",
                "Dockerfile": "$(System.DefaultWorkingDirectory)/{directory}.ms-device-management-api/ms-device-management-api/azure/function/Dockerfile",
                "buildContext": "$(System.DefaultWorkingDirectory)/{directory}.ms-device-management-api/ms-device-management-api/azure/function",
                "tags": "$(Build.BuildId)"
              }
            },
            {
              "environment": {},
              "taskId": "13c22ce0-3b93-43f9-aeb7-71fbce7bf5b2",
              "version": "1.*",
              "name": "Azure Function App on Container Deploy: func-ms-device-management-api-{env}-eastus-{uid}",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "azureSubscription": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "appName": "func-ms-device-management-api-{env}-eastus-{uid}",
                "deployToSlotOrASE": "false",
                "resourceGroupName": "",
                "slotName": "production",
                "imageName": "$(acr).azurecr.io/$(image):$(Build.BuildId)",
                "containerCommand": "",
                "appSettings": "-DOCKER_REGISTRY_SERVER_USERNAME $(DOCKER_REGISTRY_SERVER_USERNAME) -DOCKER_REGISTRY_SERVER_PASSWORD $(DOCKER_REGISTRY_SERVER_PASSWORD) -AXIOS_TIMEOUT 0 -TACHYON_URL https://tachyon.myworkstyle.info -TACHYON_ACCESS_TOKEN DXC4cc2a4dfaf404daebdb633fa713fb9bb -DOCKER_REGISTRY_SERVER_PASSWORD E5Oy+NRjpFG2nqWSmgK43N9WBOvEK0xN -APPINSIGHTS_INSTRUMENTATIONKEY 3c114cdc-37bb-402c-b7c4-93e7346cef46 -APPLICATIONINSIGHTS_CONNECTION_STRING InstrumentationKey=3c114cdc-37bb-402c-b7c4-93e7346cef46;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/ -DOCKER_REGISTRY_SERVER_URL $(DOCKER_REGISTRY_SERVER_URL)",
                "configurationStrings": ""
              }
            }
          ]
        },
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": {
              "identifier": "windows-2019"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "{directory}.ms-asset-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-incident-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-knowledge-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-order-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-shipping-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-uptime-base-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.ms-user-api",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.portal-web",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                },
                {
                  "alias": "{directory}.Uptime-storybook",
                  "artifactType": "Build",
                  "artifactDownloadMode": "Skip",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 36,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 2,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Command Line Script",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"\n",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "az login --service-principal --username $(az_username) --password $(az_password)  --tenant $(az_tenant)\naz account set --subscription '$(az_subscription)'\n\n$accountInfo = az account show\n$accountInfoObject = $accountInfo | ConvertFrom-Json\n$subscriptionId  = $accountInfoObject.id\n$resourceGroup = \"rg-$(func)\"\n$functionName = \"$(func)\"\n\n$functionkeylist = az rest --method post --uri \"https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/$functionName/host/default/listKeys?api-version=2018-11-01\"\n$keylistobject = $functionkeylist | ConvertFrom-Json\n$func_key = $keylistobject.functionKeys.default\n\"##vso[task.setvariable variable=functionKey;]$func_key\"",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "PowerShell Script",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "(Get-Content -path swagger.json -Raw) -replace 'ms_url','https://$(func).azurewebsites.net/api' | Set-Content -Path swagger.json",
                "errorActionPreference": "stop",
                "warningPreference": "default",
                "informationPreference": "default",
                "verbosePreference": "default",
                "debugPreference": "default",
                "failOnStderr": "false",
                "showWarnings": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim",
                "runScriptInSeparateScope": "false"
              }
            },
            {
              "environment": {},
              "taskId": "fbb5ba7e-f837-4f46-b31e-f34c117fdd05",
              "version": "5.*",
              "name": "API Management - Create/Update API ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "retryCountOnTaskFailure": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "5e625629-f2a3-49f1-aa10-b2080a8c1ca2",
                "ResourceGroupName": "rg-uptime-$(env)-$(location)-$(uid)",
                "ApiPortalName": "apim-uptime-$(uid)",
                "UseProductCreatedByPreviousTask": "false",
                "product1": "Unlimited\nuptime",
                "OpenAPISpec": "v3",
                "Format": "json",
                "Authorization": "None",
                "oauth": "",
                "oid": "",
                "SwaggerPicker": "Artifact",
                "swaggerlocation": "",
                "swaggerartifact": "$(System.DefaultWorkingDirectory)/{directory}.$(ms-path)/$(ms-path)/azure/apim/swagger.json",
                "swaggercode": "",
                "targetapi": "$(ms-name)",
                "DisplayName": "$(ms-name)",
                "pathapi": "$(ms-name)/api",
                "subscriptionRequired": "true",
                "TemplateSelector": "Custom",
                "None": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "policyArtifact": "",
                "Custom": "<policies>\n\t<inbound>\n             <cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t     </cors>\n            <set-header name=\"x-functions-key\" exists-action=\"override\">\n                 <value>$(functionKey)</value>\n            </set-header>\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CacheLookup": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "Basic": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "CORS": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "JWT": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "IP": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "RateByKey": "<policies>\n\t<inbound>\n\t\t<rate-limit-by-key calls='5' renewal-period='60' counter-key='@(context.Request.IpAddress)'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "QuotaByKey": "<policies>\n\t<inbound>\n\t\t<quota-by-key calls='10000' bandwidth='40000' renewal-period='3600'/>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "HeaderCheck": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
                "MicrosoftApiManagementAPIVersion": "2017-03-01"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "backend",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 170,
        "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/releases/170",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "BoardsEnvironmentType": {
          "$type": "System.String",
          "$value": "unmapped"
        },
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://vsrm.dev.azure.com/WMShowCase/_apis/public/Release/badge/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/13/70"
    }
  ],
  "artifacts": [
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:21",
      "type": "Build",
      "alias": "{directory}.ms-asset-api",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=21",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "21",
          "name": "UptimeforShowcase.ms-asset-api-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isPrimary": true,
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:28",
      "type": "Build",
      "alias": "{directory}.ms-device-management-api",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=28",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "sprint/26",
          "name": "sprint/26"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "28",
          "name": "UptimeforShowcase.ms-device-management-api"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:24",
      "type": "Build",
      "alias": "{directory}.ms-incident-api",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=24",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "24",
          "name": "UptimeforShowcase.ms-incident-api-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:26",
      "type": "Build",
      "alias": "{directory}.ms-knowledge-api",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=26",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "26",
          "name": "UptimeforShowcase.ms-knowledge-api-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:23",
      "type": "Build",
      "alias": "{directory}.ms-order-api",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=23",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "23",
          "name": "UptimeforShowcase.ms-order-api-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:25",
      "type": "Build",
      "alias": "{directory}.ms-shipping-api",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=25",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "25",
          "name": "UptimeforShowcase.ms-shipping-api-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:20",
      "type": "Build",
      "alias": "{directory}.ms-uptime-base-api",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=20",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "20",
          "name": "UptimeforShowcase.ms-uptime-base-api-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:22",
      "type": "Build",
      "alias": "{directory}.ms-user-api",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=22",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "22",
          "name": "UptimeforShowcase.ms-user-api-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:19",
      "type": "Build",
      "alias": "{directory}.portal-web",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=19",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "19",
          "name": "UptimeforShowcase.portal-web-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e:18",
      "type": "Build",
      "alias": "{directory}.Uptime-storybook",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/WMShowCase/_permalink/_build/index?collectionId=a58beef4-4e5e-488a-b5e2-3d2b9731a95e&projectId=f9a174c5-9ec2-4b57-a321-c43a61e5d35e&definitionId=18",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "release/22.2.2",
          "name": "release/22.2.2"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestWithBranchAndTagsType",
          "name": "Latest from a specific branch with tags"
        },
        "definition": {
          "id": "18",
          "name": "UptimeforShowcase.Uptime-storybook-1"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "f9a174c5-9ec2-4b57-a321-c43a61e5d35e",
          "name": "TerraformUptime"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isRetained": false
    }
  ],
  "triggers": [],
  "releaseNameFormat": "Release-$(rev:r)",
  "tags": [],
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseClone"
    },
    "IntegrateBoardsWorkItems": {
      "$type": "System.String",
      "$value": "False"
    },
    "IntegrateJiraWorkItems": {
      "$type": "System.String",
      "$value": "false"
    }
  },
  "id": 13,
  "name": "Showcase3 CI/CD - Demo",
  "path": "\\pipelineJson-Modified",
  "projectReference": null,
  "url": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/definitions/13",
  "_links": {
    "self": {
      "href": "https://vsrm.dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_apis/Release/definitions/13"
    },
    "web": {
      "href": "https://dev.azure.com/WMShowCase/f9a174c5-9ec2-4b57-a321-c43a61e5d35e/_release?definitionId=13"
    }
  }
}